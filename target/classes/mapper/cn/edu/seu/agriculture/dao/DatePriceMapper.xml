<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.seu.agriculture.dao.DatePriceMapper">
  <resultMap id="BaseResultMap" type="cn.edu.seu.agriculture.entity.DatePrice">
    <constructor>
      <idArg column="date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="province" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="market" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    date, province, market, type, name, price
  </sql>
  <select id="selectByExample" parameterType="cn.edu.seu.agriculture.entity.DatePriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from date_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.util.Date" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from date_price
    where date = #{date,jdbcType=DATE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.Date">
    delete from date_price
    where date = #{date,jdbcType=DATE}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.seu.agriculture.entity.DatePriceExample">
    delete from date_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.seu.agriculture.entity.DatePrice">
    insert into date_price (date, province, market, 
      type, name, price)
    values (#{date,jdbcType=DATE}, #{province,jdbcType=VARCHAR}, #{market,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.seu.agriculture.entity.DatePrice">
    insert into date_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        date,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="market != null">
        market,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        #{market,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.seu.agriculture.entity.DatePriceExample" resultType="java.lang.Long">
    select count(*) from date_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update date_price
    <set>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.market != null">
        market = #{record.market,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update date_price
    set date = #{record.date,jdbcType=DATE},
      province = #{record.province,jdbcType=VARCHAR},
      market = #{record.market,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.seu.agriculture.entity.DatePrice">
    update date_price
    <set>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        market = #{market,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where date = #{date,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.seu.agriculture.entity.DatePrice">
    update date_price
    set province = #{province,jdbcType=VARCHAR},
      market = #{market,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where date = #{date,jdbcType=DATE}
  </update>
</mapper>